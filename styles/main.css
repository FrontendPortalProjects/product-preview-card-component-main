@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Fraunces";
  src: url("../fonts/Fraunces-Bold.woff2") format(woff2);
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url("../fonts/Montserrat-Medium.woff2") format(woff2);
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Montserrat";
  src: url("../fonts/Montserrat-Bold.woff2") format(woff2);
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-green-500: hsl(158, 36%, 37%);
  --color-green-700: hsl(158, 42%, 18%);
  --color-black: hsl(212, 21%, 14%);
  --color-gray: hsl(228, 12%, 48%);
  --color-cream: hsl(30, 38%, 92%);
  --color-white: hsl(0, 0%, 100%);
  --container-width: 90rem;
  --container-padding-x: 1rem;
  --transition-duration: 0.2s;
  --font-family-base: "Montserrat", sans-serif;
  --font-family-accent: "Fraunces", sans-serif;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
  display: grid;
  place-items: center;
  height: 100vh;
}

body {
  background: var(--color-cream);
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base);
}

a,
button {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-black);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

.attribution {
  font-size: clamp(0.75rem, 0.6893203883rem + 0.2588996764vw, 1rem);
  padding-block: clamp(0.5rem, 0.4696601942rem + 0.1294498382vw, 0.625rem);
  text-align: center;
  color: var(--color-white);
  background-color: var(--color-black);
}
.attribution__link {
  color: var(--color-green-500);
}
.attribution__link:hover {
  color: var(--color-gray);
}

.card {
  font-family: "Montserrat";
  background: var(--color-white);
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  max-width: 37.5rem;
  border-radius: 0.625rem;
}
@media (width <= 36.06125rem) {
  .card {
    grid-template-columns: none;
    grid-template-rows: repeat(2, 1fr);
  }
}
.card__preview {
  background: url("../images/image-product-desktop.jpg") no-repeat center/cover;
  border-radius: 0.625rem 0 0 0.625rem;
}
@media (width <= 36.06125rem) {
  .card__preview {
    background: url("../images/image-product-mobile.jpg") no-repeat center/cover;
    border-radius: 0.625rem 0.625rem 0 0;
  }
}
.card__body {
  padding: clamp(1.25rem, 1.0983009709rem + 0.6472491909vw, 1.875rem);
  display: flex;
  flex-direction: column;
  row-gap: clamp(1.25rem, 1.1741504854rem + 0.3236245955vw, 1.5625rem);
}
.card__category {
  font-weight: 500;
  font-size: 0.75rem;
  text-transform: uppercase;
  color: var(--color-gray);
  letter-spacing: 0.313rem;
}
.card__title {
  font-family: var(--font-family-accent);
  line-height: 1;
}
.card__description {
  color: var(--color-gray);
  font-size: clamp(0.75rem, 0.7196601942rem + 0.1294498382vw, 0.875rem);
}
.card__price {
  display: flex;
  align-items: center;
  column-gap: clamp(1rem, 0.9393203883rem + 0.2588996764vw, 1.25rem);
}
.card__price--now {
  color: var(--color-green-500);
  font-family: var(--font-family-accent);
  font-size: clamp(1.5rem, 1.3786407767rem + 0.5177993528vw, 2rem);
}
.card__price--old {
  text-decoration: line-through;
  color: var(--color-gray);
  font-size: clamp(0.625rem, 0.5946601942rem + 0.1294498382vw, 0.75rem);
}
.card__button {
  display: flex;
  align-items: center;
  column-gap: 0.625rem;
  padding-block: 0.625rem;
  border-radius: 0.625rem;
  justify-content: center;
  border: none;
  background-color: var(--color-green-500);
  color: var(--color-white);
}
@media (any-hover: hover) {
  .card__button:hover {
    color: var(--color-green-500);
    background-color: var(--color-cream);
  }
}
@media (any-hover: none) {
  .card__button:active {
    color: var(--color-green-500);
    background-color: var(--color-cream);
  }
}

/*# sourceMappingURL=main.css.map */
